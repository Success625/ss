@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');

:root {
    --pri-color: #e8a400;
    --pri-color-light: #ffbf40;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

/* Pre-defined Classes */

i[class*='fa'],
i[class*='bi'],
i[class*='bx'] {
    font-size: 1.3rem;
}

.a, .btn, a {
    -webkit-tap-highlight-color: rgba(0,0,0,.1);
}

.a {
    color: inherit;
    text-decoration: none;
}

.link {
    color: var(--pri-color);
    text-decoration: underline;
}

.svgb {
    --clr: #000;
}

.svgb svg {
    fill: var(--clr);
    stroke: var(--clr);
}

.wrapper {
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
}

.top-bar {
    padding: 8px;
}

.back-btn {
    background: none;
    outline: none;
    border: none;
    padding: 8px;
    font-size: 1.2rem;
}

.header {
    display: flex;
    width: 100%;
    align-items: center;
    justify-content: center;
}

.header img {
    width: 70px;
    height: auto;
    /*height: calc(.79 * var(--y));*/
    transform: rotate(-1deg);
}

.header-text {
    font-family: 'Roboto Mono', monospace;
    font-weight: 500;
    font-size: 1rem;
    line-height: 1.5rem;
    padding: .5rem;
}

.header-text h4 {
    font-family: inherit;
}

.main {
    padding: .5rem;
}

.info-text {
    width: 100%;
    padding: .5rem;
    text-align: center;
}

:is(.signin, .form-field) {
    display: flex;
    flex-direction: column;
}

.form-field {
    margin-top: .75rem;
}

.form-field .input {
    --padl: .5rem;
    position: relative;
    min-width: 250px;
    width: 100%;
    min-height: 3rem;
}

.form-field.error .input {
    animation: shake .5s ease-in-out;
}

.form-field .input input {
    width: 100%;
    height: 3rem;
    outline: none;
    font-size: 1rem;
    padding: .5rem;
    padding-left: var(--padl);
    border: 1px solid var(--pri-color);
    border-radius: 2px;
}

.form-field .input input:focus {
    border-width: 2px;
}

.form-field.error .input input {
    border: 2px solid #f00;
}

.form-field .input label {
    position: absolute;
    left: var(--padl);
    top: 50%;
    transform: translateY(-50%);
    transition: all 25ms;
    color: rgba(0,0,0,.5);
    background: #fff;
    user-select: none;
}

.form-field.error .input label {
    color: rgba(255,0,0,.9);
}

.form-field .input input:is(:focus, :valid) ~ label {
    top: 0;
    font-size: .875rem;
}

.form-field .error-box {
    padding-top: .3rem;
    display: none;
    align-items: center;
    color: red;
    font-size: 1rem;
    user-select: none;
}

.form-field.error .error-box {
    display: flex;
}

.form-field .error-box small {
    padding-left: .5rem;
}

:is(.login-box, .signup-box) {
    display: none;
}

:is(.login-box.active, .signup-box.active) {
    display: flex;
    flex-direction: column;
}

.signin .btn {
    margin-top: .5rem;
    padding: .875rem 1.5rem;
    font-size: 1rem;
    color: #fff;
    background: var(--pri-color-light);
    outline: none;
    border: none;
    box-shadow: 0 0 5px rgba(0,0,0,.1);
}

.footer {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: .5rem;
    padding: 1rem;
    margin-top: 2rem;
}

.footer a {
    
}

@keyframes shake {
    0% {
        transform: translateX(0);
    }
    
    25% {
        transform: translateX(-5px);
    }
    
    50% {
        transform: translateX(5px);
    }
    
    75% {
        transform: translateX(-5px);
    }
    
    100% {
        transform: translateX(0);
    }
}